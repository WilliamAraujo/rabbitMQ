version: '3'

services:

  consumer:
    build: 
      context: ./consumer
      dockerfile: Dockerfile
    # command: python consumer.py
    container_name: 'consumer'
    hostname: 'consumer'
    # network_mode: "host"
    networks:
      lan:
        # Define a static ip for the container. The containter can be accessible by others devices on the LAN network with this IP.
        ipv4_address: 127.0.0.3
    depends_on:
      - rabbitmq

  rabbitmq:
    build: 
      context: ./rabbitmq
      dockerfile: Dockerfile
    container_name: rabbitmq
    hostname: 'rabbitmq'
    ports:
      - '25676:25676'
      - '15672:15672'
      - '5672:5672'
    environment:
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_PASSWORD=homesecurity
      - RABBITMQ_USERNAME=Home@security7
    # network_mode: host
    networks:
      lan:
        # Define a static ip for the container. The containter can be accessible by others devices on the LAN network with this IP.
        ipv4_address: 127.0.0.2

networks:
  lan:
    name: lan
    driver: macvlan
    driver_opts:
      parent: lo #your ethernet interface
    ipam:
      config:
        - subnet: 127.0.0.1/8

# networks:
#   rabbitmq_network:
#     name: rabbitmq_network
#     driver: bridge

  # service_a:
  #   build: 
  #     context: ./servicesA
  #     dockerfile: Dockerfile
  #   command: python serviceA.py
  #   # restart: 'always'
  #   container_name: 'serviceA'
  #   networks:
  #     - myNetwork
  #   depends_on:
  #     - consumer

  # service_b:
  #   build: 
  #     context: ./servicesB
  #     dockerfile: Dockerfile
  #   command: python serviceB.py
  #   # restart: 'always'
  #   container_name: 'serviceB'
  #   network_mode: "host"
  #   networks:
  #     - myNetwork
  #   depends_on:
  #     - consumer